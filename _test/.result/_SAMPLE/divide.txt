rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp -fst 
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1729219643
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('0000000', 0, '// http:\\/\\/hp.vector.co.jp/authors/VA054130/Ｚ８０の乗除算.txt')
('0000000', 0, '// A/B = C ... A')
('00111110', 0, '// LD A,0xfe')
('11111110', 0, 0)
('00000001', 0, '// LD BC,0x300')
('00000000', 0, 0)
('00000011', 0, 0)
('10010000', 0, '// SUB B')
('00111000', 0, '// JR C,+5')
('00000011', 0, 0)
('00001100', 0, '// INC C')
('00011000', 0, '// JR -4')
('11111010', 0, 0)
('10000000', 0, '// ADD A,B')
('00000000', 'A=00000010,C=01010100', 0)
('ffffffff', 0, 0)
----------------------------------------

// http:\/\/hp.vector.co.jp/authors/VA054130/Ｚ８０の乗除算.txt
0000000
// A/B = C ... A
0000000
// LD A,0xfe
00111110
11111110
11111110
// LD BC,0x300
00000001
00000000
00000000
00000011
00000011
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// INC C
00001100
// JR -4
00011000
11111010
11111010
// SUB B
10010000
// JR C,+5
00111000
00000011
00000011
// ADD A,B
10000000
00000000
✅ Test( A=00000010 ) is passed.
✅ Test( C=01010100 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000001111    DEC:15
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00000010    DEC:2
regF    :    BIN 00010001    DEC:17
regB    :    BIN 00000011    DEC:3
regC    :    BIN 01010100    DEC:84
regD    :    BIN xxxxxxxx
regE    :    BIN xxxxxxxx
regH    :    BIN xxxxxxxx
regL    :    BIN xxxxxxxx
regPC   :    BIN 0000000000001111    DEC:15
regSP   :    BIN xxxxxxxxxxxxxxxx
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 01011000    DEC:88
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 00000011    DEC:3
regOP   :    BIN 00000000    DEC:0
regOPo  :    BIN 10000000    DEC:128
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000000000    DEC:0

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
----------------------------------------


6965000.00ns INFO     cocotb.regression                  tb_instruction passed
6965000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                         ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                         *****************************************************************************************
                                                         ** instruction_test.tb_instruction   PASS     6965000.00           1.77    3935086.07  **
                                                         *****************************************************************************************
                                                         ** TESTS=1 PASS=1 FAIL=0 SKIP=0               6965000.00           1.77    3932790.64  **
                                                         *****************************************************************************************
                                                         
FST info: dumpfile sim_build/NORZ.fst opened for output.
