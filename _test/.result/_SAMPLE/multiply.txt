rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp -fst 
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1729218611
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00000000', 0, '// AxE http:\\/\\/new3room.tyanoyu.net/multi2.html')
('00000000', 0, '// 0x8 x 0x45')
('00100001', 0, '// LD HL,0x0')
('00000000', 0, 0)
('00000000', 0, 0)
('00111110', 0, '// N LD A,0x8')
('00001000', 0, 0)
('00010001', 0, '// E LD DE,0x45')
('01000101', 0, 0)
('00000000', 0, 0)
('00000110', 0, '// bit長 LD B,0x8')
('00001000', 0, 0)
('00101001', 0, '// ADD HL,HL (DJNZ -5)')
('10000111', 0, '// ADD A,A')
('00110000', 0, '// JR NC,+3')
('00000001', 0, 0)
('00011001', 0, '// ADD HL,DE')
('00010000', 0, '// DJNZ -5 (ADD HL,HL)')
('11111001', 0, 0)
('00000000', 'H=00000010,L=00101000', 0)
('00000000', 0, '// 0x2f x 0x33')
('00100001', 0, '// LD HL,0x0')
('00000000', 0, 0)
('00000000', 0, 0)
('00111110', 0, '// N LD A,0x2f')
('00101111', 0, 0)
('00010001', 0, '// E LD DE,0x33')
('00110011', 0, 0)
('00000000', 0, 0)
('00000110', 0, '// bit長 LD B,0x8')
('00001000', 0, 0)
('00101001', 0, '// ADD HL,HL (DJNZ -5)')
('10000111', 0, '// ADD A,A')
('00110000', 0, '// JR NC,+3')
('00000001', 0, 0)
('00011001', 0, '// ADD HL,DE')
('00010000', 0, '// DJNZ -5 (ADD HL,HL)')
('11111001', 0, 0)
('00000000', 'H=00001001,L=01011101', 0)
('ffffffff', 0, 0)
----------------------------------------

// AxE http:\/\/new3room.tyanoyu.net/multi2.html
00000000
// 0x8 x 0x45
00000000
// LD HL,0x0
00100001
00000000
00000000
00000000
00000000
// N LD A,0x8
00111110
00001000
00001000
// E LD DE,0x45
00010001
01000101
01000101
00000000
00000000
// bit長 LD B,0x8
00000110
00001000
00001000
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// ADD HL,DE
00011001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
00000000
✅ Test( H=00000010 ) is passed.
✅ Test( L=00101000 ) is passed.
// 0x2f x 0x33
00000000
// LD HL,0x0
00100001
00000000
00000000
00000000
00000000
// N LD A,0x2f
00111110
00101111
00101111
// E LD DE,0x33
00010001
00110011
00110011
00000000
00000000
// bit長 LD B,0x8
00000110
00001000
00001000
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// ADD HL,DE
00011001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// ADD HL,DE
00011001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// ADD HL,DE
00011001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// ADD HL,DE
00011001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
// ADD HL,HL (DJNZ -5)
00101001
// ADD A,A
10000111
// JR NC,+3
00110000
00000001
00000001
// ADD HL,DE
00011001
// DJNZ -5 (ADD HL,HL)
00010000
11111001
11111001
00000000
✅ Test( H=00001001 ) is passed.
✅ Test( L=01011101 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000100111    DEC:39
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00000000    DEC:0
regF    :    BIN 01001100    DEC:76
regB    :    BIN 00000000    DEC:0
regC    :    BIN xxxxxxxx
regD    :    BIN 00000000    DEC:0
regE    :    BIN 00110011    DEC:51
regH    :    BIN 00001001    DEC:9
regL    :    BIN 01011101    DEC:93
regPC   :    BIN 0000000000100111    DEC:39
regSP   :    BIN xxxxxxxxxxxxxxxx
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 01010011    DEC:83
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 11111001    DEC:249
regOP   :    BIN 00000000    DEC:0
regOPo  :    BIN 11111001    DEC:249
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000000000    DEC:0

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
----------------------------------------


2276000.00ns INFO     cocotb.regression                  tb_instruction passed
2276000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                         ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                         *****************************************************************************************
                                                         ** instruction_test.tb_instruction   PASS     2276000.00           0.57    3996873.22  **
                                                         *****************************************************************************************
                                                         ** TESTS=1 PASS=1 FAIL=0 SKIP=0               2276000.00           0.57    3989030.19  **
                                                         *****************************************************************************************
                                                         
FST info: dumpfile sim_build/NORZ.fst opened for output.
