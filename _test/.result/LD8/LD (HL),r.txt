rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1728617526
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00100110', 0, '// LD H,0x11')
('00010001', 0, 0)
('00101110', 0, '// LD L,0x26')
('00100110', 0, 0)
('00000110', 0, '// LD B,0x0')
('00000000', 0, 0)
('01110000', '(0001000100100110)=00000000', '// LD (HL),B')
('00001110', 0, '// LD C,0x1')
('00000001', 0, 0)
('01110001', '(0001000100100110)=00000001', '// LD (HL),C')
('00010110', 0, '// LD D,0x6')
('00000110', 0, 0)
('01110010', '(0001000100100110)=00000110', '// LD (HL),D')
('00011110', 0, '// LD E,0x8')
('00001000', 0, 0)
('01110011', '(0001000100100110)=00001000', '// LD (HL),E')
('00111110', 0, '// LD A,0xff')
('11111111', 0, 0)
('01110111', '(0001000100100110)=11111111', '// LD (HL),A')
('01110100', '(0001000100100110)=00010001', '// LD (HL),H')
('01110101', '(0001000100100110)=00100110', '// LD (HL),L')
('ffffffff', 0, 0)
----------------------------------------

// LD H,0x11
00100110
00010001
00010001
// LD L,0x26
00101110
00100110
00100110
// LD B,0x0
00000110
00000000
00000000
// LD (HL),B
01110000

✅ Test( (0001000100100110)=00000000 ) is passed.
// LD C,0x1
00001110
00000001
00000001
// LD (HL),C
01110001

✅ Test( (0001000100100110)=00000001 ) is passed.
// LD D,0x6
00010110
00000110
00000110
// LD (HL),D
01110010

✅ Test( (0001000100100110)=00000110 ) is passed.
// LD E,0x8
00011110
00001000
00001000
// LD (HL),E
01110011

✅ Test( (0001000100100110)=00001000 ) is passed.
// LD A,0xff
00111110
11111111
11111111
// LD (HL),A
01110111

✅ Test( (0001000100100110)=11111111 ) is passed.
// LD (HL),H
01110100

✅ Test( (0001000100100110)=00010001 ) is passed.
// LD (HL),L
01110101

✅ Test( (0001000100100110)=00100110 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000010101    DEC:21
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 11111111    DEC:255
regF    :    BIN xxxxxxxx
regB    :    BIN 00000000    DEC:0
regC    :    BIN 00000001    DEC:1
regD    :    BIN 00000110    DEC:6
regE    :    BIN 00001000    DEC:8
regH    :    BIN 00010001    DEC:17
regL    :    BIN 00100110    DEC:38
regPC   :    BIN 0000000000010101    DEC:21
regSP   :    BIN xxxxxxxxxxxxxxxx
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00001110    DEC:14
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 11111111    DEC:255
regOP   :    BIN 01110101    DEC:117
regOPo  :    BIN 01110100    DEC:116
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000001110101    DEC:117

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
(0001000100100110) 00100110
----------------------------------------


308000.00ns INFO     cocotb.regression                  tb_instruction passed
308000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      308000.00           0.05    6482337.71  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                308000.00           0.05    6132139.84  **
                                                        *****************************************************************************************
                                                        
