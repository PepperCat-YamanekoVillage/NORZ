rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1728775248
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00000001', 0, '// LD BC,0x100')
('00000000', 0, 0)
('00000001', 0, 0)
('00010001', 0, '// LD DE,0x00ff')
('11111111', 0, 0)
('00000000', 0, 0)
('11111101', 0, '// LD IY,0xff00')
('00100001', 0, 0)
('00000000', 0, 0)
('11111111', 0, 0)
('00110001', 0, '// LD SP,0xabcd')
('11001101', 0, 0)
('10101011', 0, 0)
('11111101', 0, '// ADD IY,BC')
('00001001', 'IY=0000000000000000,FlagC=1,FlagN=0,FlagH=1', 0)
('11111101', 0, '// ADD IY,DE')
('00011001', 'IY=0000000011111111,FlagC=0,FlagN=0,FlagH=0', 0)
('11111101', 0, '// ADD IY,IY')
('00101001', 'IY=0000000111111110,FlagC=0,FlagN=0,FlagH=0', 0)
('11111101', 0, '// ADD IY,SP')
('00111001', 'IY=1010110111001011,FlagC=0,FlagN=0,FlagH=0', 0)
('ffffffff', 0, 0)
----------------------------------------

// LD BC,0x100
00000001
00000000
00000000
00000001
00000001
// LD DE,0x00ff
00010001
11111111
11111111
00000000
00000000
// LD IY,0xff00
11111101
00100001
00000000
00000000
11111111
11111111
// LD SP,0xabcd
00110001
11001101
11001101
10101011
10101011
// ADD IY,BC
11111101
00001001
✅ Test( IY=0000000000000000 ) is passed.
✅ Test( FlagC=1 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=1 ) is passed.
// ADD IY,DE
11111101
00011001
✅ Test( IY=0000000011111111 ) is passed.
✅ Test( FlagC=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// ADD IY,IY
11111101
00101001
✅ Test( IY=0000000111111110 ) is passed.
✅ Test( FlagC=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// ADD IY,SP
11111101
00111001
✅ Test( IY=1010110111001011 ) is passed.
✅ Test( FlagC=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000010101    DEC:21
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN xxxxxxxx
regF    :    BIN xx001x00
regB    :    BIN 00000001    DEC:1
regC    :    BIN 00000000    DEC:0
regD    :    BIN 00000000    DEC:0
regE    :    BIN 11111111    DEC:255
regH    :    BIN xxxxxxxx
regL    :    BIN xxxxxxxx
regPC   :    BIN 0000000000010101    DEC:21
regSP   :    BIN 1010101111001101    DEC:43981
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN 1010110111001011    DEC:44491
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00001101    DEC:13
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 10101011    DEC:171
regOP   :    BIN 00111001    DEC:57
regOPo  :    BIN 11111101    DEC:253
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000111001    DEC:57

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
----------------------------------------


326000.00ns INFO     cocotb.regression                  tb_instruction passed
326000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      326000.00           0.05    6286374.85  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                326000.00           0.05    5971034.90  **
                                                        *****************************************************************************************
                                                        
