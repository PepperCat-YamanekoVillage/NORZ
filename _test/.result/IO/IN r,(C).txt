rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1729127659
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00111110', 0, '// LD A,0x40')
('01000000', 0, 0)
('00110010', 0, '// LD (0xff00),A')
('00000000', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0x41')
('01000001', 0, 0)
('00110010', 0, '// LD (0xff01),A')
('00000001', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0x42')
('01000010', 0, 0)
('00110010', 0, '// LD (0xff02),A')
('00000010', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0x43')
('01000011', 0, 0)
('00110010', 0, '// LD (0xff03),A')
('00000011', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0x44')
('01000100', 0, 0)
('00110010', 0, '// LD (0xff04),A')
('00000100', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0x85')
('10000101', 0, 0)
('00110010', 0, '// LD (0xff05),A')
('00000101', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0x0')
('00000000', 0, 0)
('00110010', 0, '// LD (0xff07),A')
('00000111', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0xff')
('11111111', 0, 0)
('00000001', 0, '// LD BC,0xff00')
('00000000', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// IN B,(C)')
('01000000', 'B=01000000,FlagZ=0,FlagPV=0,FlagS=0,FlagN=0,FlagH=0', 0)
('00000001', 0, '// LD BC,0xff01')
('00000001', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// IN C,(C)')
('01001000', 'C=01000001,FlagZ=0,FlagPV=1,FlagS=0,FlagN=0,FlagH=0', 0)
('00000001', 0, '// LD BC,0xff02')
('00000010', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// IN D,(C)')
('01010000', 'D=01000010,FlagZ=0,FlagPV=1,FlagS=0,FlagN=0,FlagH=0', 0)
('00000001', 0, '// LD BC,0xff03')
('00000011', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// IN E,(C)')
('01011000', 'E=01000011,FlagZ=0,FlagPV=0,FlagS=0,FlagN=0,FlagH=0', 0)
('00000001', 0, '// LD BC,0xff04')
('00000100', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// IN H,(C)')
('01100000', 'H=01000100,FlagZ=0,FlagPV=1,FlagS=0,FlagN=0,FlagH=0', 0)
('00000001', 0, '// LD BC,0xff05')
('00000101', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// IN L,(C)')
('01101000', 'L=10000101,FlagZ=0,FlagPV=0,FlagS=1,FlagN=0,FlagH=0', 0)
('00000001', 0, '// LD BC,0xff07')
('00000111', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// IN F,(C)')
('01110000', 'FlagZ=1,FlagPV=1,FlagS=0,FlagN=0,FlagH=0', 0)
('11101101', 0, '// IN A,(C)')
('01111000', 'A=00000000,FlagZ=1,FlagPV=1,FlagS=0,FlagN=0,FlagH=0', 0)
('ffffffff', 0, 0)
----------------------------------------

// LD A,0x40
00111110
01000000
01000000
// LD (0xff00),A
00110010
00000000
00000000
11111111
11111111

// LD A,0x41
00111110
01000001
01000001
// LD (0xff01),A
00110010
00000001
00000001
11111111
11111111

// LD A,0x42
00111110
01000010
01000010
// LD (0xff02),A
00110010
00000010
00000010
11111111
11111111

// LD A,0x43
00111110
01000011
01000011
// LD (0xff03),A
00110010
00000011
00000011
11111111
11111111

// LD A,0x44
00111110
01000100
01000100
// LD (0xff04),A
00110010
00000100
00000100
11111111
11111111

// LD A,0x85
00111110
10000101
10000101
// LD (0xff05),A
00110010
00000101
00000101
11111111
11111111

// LD A,0x0
00111110
00000000
00000000
// LD (0xff07),A
00110010
00000111
00000111
11111111
11111111

// LD A,0xff
00111110
11111111
11111111
// LD BC,0xff00
00000001
00000000
00000000
11111111
11111111
// IN B,(C)
11101101
01000000
01000000
01000000
01000000
✅ Test( B=01000000 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=0 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD BC,0xff01
00000001
00000001
00000001
11111111
11111111
// IN C,(C)
11101101
01001000
01000001
01000001
01000001
✅ Test( C=01000001 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD BC,0xff02
00000001
00000010
00000010
11111111
11111111
// IN D,(C)
11101101
01010000
01000010
01000010
01000010
✅ Test( D=01000010 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD BC,0xff03
00000001
00000011
00000011
11111111
11111111
// IN E,(C)
11101101
01011000
01000011
01000011
01000011
✅ Test( E=01000011 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=0 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD BC,0xff04
00000001
00000100
00000100
11111111
11111111
// IN H,(C)
11101101
01100000
01000100
01000100
01000100
✅ Test( H=01000100 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD BC,0xff05
00000001
00000101
00000101
11111111
11111111
// IN L,(C)
11101101
01101000
10000101
10000101
10000101
✅ Test( L=10000101 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=0 ) is passed.
✅ Test( FlagS=1 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD BC,0xff07
00000001
00000111
00000111
11111111
11111111
// IN F,(C)
11101101
01110000
00000000
00000000
00000000
✅ Test( FlagZ=1 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// IN A,(C)
11101101
01111000
00000000
00000000
00000000
✅ Test( A=00000000 ) is passed.
✅ Test( FlagZ=1 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000001001010    DEC:74
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00000000    DEC:0
regF    :    BIN 0100010x
regB    :    BIN 11111111    DEC:255
regC    :    BIN 00000111    DEC:7
regD    :    BIN 01000010    DEC:66
regE    :    BIN 01000011    DEC:67
regH    :    BIN 01000100    DEC:68
regL    :    BIN 10000101    DEC:133
regPC   :    BIN 0000000001001010    DEC:74
regSP   :    BIN xxxxxxxxxxxxxxxx
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00100110    DEC:38
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 00000000    DEC:0
regOP   :    BIN 01111000    DEC:120
regOPo  :    BIN 11101101    DEC:237
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000000000    DEC:0

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
(1111111100000000) 01000000
(1111111100000001) 01000001
(1111111100000010) 01000010
(1111111100000011) 01000011
(1111111100000100) 01000100
(1111111100000101) 10000101
(1111111100000111) 00000000
----------------------------------------


953000.00ns INFO     cocotb.regression                  tb_instruction passed
953000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      953000.00           0.14    6716287.63  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                953000.00           0.14    6668821.75  **
                                                        *****************************************************************************************
                                                        
