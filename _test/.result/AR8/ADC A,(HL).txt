rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1728707550
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00100001', 0, '// LD HL,0x8880')
('10000000', 0, 0)
('10001000', 0, 0)
('00100010', 0, '// LD (0x8880),HL')
('10000000', 0, 0)
('10001000', 0, 0)
('00111110', 0, '// LD A,0x80')
('10000000', 0, 0)
('00110111', 0, '// SCF')
('00111111', 0, '// CCF')
('10001110', 'A=00000000,FlagC=1,FlagZ=1,FlagPV=1,FlagS=0,FlagN=0,FlagH=0', '// ADC A,(HL)')
('00100001', 0, '// LD HL,0x8881')
('10000001', 0, 0)
('10001000', 0, 0)
('10001110', 'A=10001001,FlagC=0,FlagZ=0,FlagPV=0,FlagS=1,FlagN=0,FlagH=0', '// ADC A,(HL)')
('10001110', 'A=00010001,FlagC=1,FlagZ=0,FlagPV=1,FlagS=0,FlagN=0,FlagH=1', '// ADC A,(HL)')
('ffffffff', 0, 0)
----------------------------------------

// LD HL,0x8880
00100001
10000000
10000000
10001000
10001000
// LD (0x8880),HL
00100010
10000000
10000000
10001000
10001000


// LD A,0x80
00111110
10000000
10000000
// SCF
00110111
// CCF
00111111
// ADC A,(HL)
10001110
10000000
10000000
✅ Test( A=00000000 ) is passed.
✅ Test( FlagC=1 ) is passed.
✅ Test( FlagZ=1 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD HL,0x8881
00100001
10000001
10000001
10001000
10001000
// ADC A,(HL)
10001110
10001000
10001000
✅ Test( A=10001001 ) is passed.
✅ Test( FlagC=0 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=0 ) is passed.
✅ Test( FlagS=1 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// ADC A,(HL)
10001110
10001000
10001000
✅ Test( A=00010001 ) is passed.
✅ Test( FlagC=1 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=0 ) is passed.
✅ Test( FlagH=1 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000010000    DEC:16
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00010001    DEC:17
regF    :    BIN 00010101    DEC:21
regB    :    BIN xxxxxxxx
regC    :    BIN xxxxxxxx
regD    :    BIN xxxxxxxx
regE    :    BIN xxxxxxxx
regH    :    BIN 10001000    DEC:136
regL    :    BIN 10000001    DEC:129
regPC   :    BIN 0000000000010000    DEC:16
regSP   :    BIN xxxxxxxxxxxxxxxx
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00001001    DEC:9
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 10001000    DEC:136
regOP   :    BIN 10001110    DEC:142
regOPo  :    BIN 10001110    DEC:142
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000010001000    DEC:136

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
(1000100010000000) 10000000
(1000100010000001) 10001000
----------------------------------------


230000.00ns INFO     cocotb.regression                  tb_instruction passed
230000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      230000.00           0.04    6447255.35  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                230000.00           0.04    6260886.57  **
                                                        *****************************************************************************************
                                                        
