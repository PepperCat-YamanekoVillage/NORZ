rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1728695697
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00100001', 0, '// LD HL,0x4433')
('00110011', 0, 0)
('01000100', 0, 0)
('00100010', 0, '// LD (0xae53),HL')
('01010011', 0, 0)
('10101110', 0, 0)
('00000001', 0, '// LD BC,0x0002')
('00000010', 0, 0)
('00000000', 0, 0)
('00100001', 0, '// LD HL,0xae54')
('01010100', 0, 0)
('10101110', 0, 0)
('00111110', 0, '// LD A,0x7f')
('01111111', 0, 0)
('11101101', 0, '// CPD')
('10101001', 'B=00000000,C=00000001,H=10101110,L=01010011,FlagZ=0,FlagPV=1,FlagS=0,FlagN=1,FlagH=0', 0)
('11101101', 0, '// CPD')
('10101001', 'B=00000000,C=00000000,H=10101110,L=01010010,FlagZ=0,FlagPV=0,FlagS=0,FlagN=1,FlagH=0', 0)
('00100001', 0, '// LD HL,0xae54')
('01010100', 0, 0)
('10101110', 0, 0)
('00111110', 0, '// LD A,0x33')
('00110011', 0, 0)
('11101101', 0, '// CPD')
('10101001', 'B=11111111,C=11111111,H=10101110,L=01010011,FlagZ=0,FlagPV=1,FlagS=1,FlagN=1,FlagH=1', 0)
('11101101', 0, '// CPD')
('10101001', 'B=11111111,C=11111110,H=10101110,L=01010010,FlagZ=1,FlagPV=1,FlagS=0,FlagN=1,FlagH=0', 0)
('ffffffff', 0, 0)
----------------------------------------

// LD HL,0x4433
00100001
00110011
00110011
01000100
01000100
// LD (0xae53),HL
00100010
01010011
01010011
10101110
10101110


// LD BC,0x0002
00000001
00000010
00000010
00000000
00000000
// LD HL,0xae54
00100001
01010100
01010100
10101110
10101110
// LD A,0x7f
00111110
01111111
01111111
// CPD
11101101
10101001
01000100
01000100
✅ Test( B=00000000 ) is passed.
✅ Test( C=00000001 ) is passed.
✅ Test( H=10101110 ) is passed.
✅ Test( L=01010011 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=1 ) is passed.
✅ Test( FlagH=0 ) is passed.
// CPD
11101101
10101001
00110011
00110011
✅ Test( B=00000000 ) is passed.
✅ Test( C=00000000 ) is passed.
✅ Test( H=10101110 ) is passed.
✅ Test( L=01010010 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=0 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=1 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD HL,0xae54
00100001
01010100
01010100
10101110
10101110
// LD A,0x33
00111110
00110011
00110011
// CPD
11101101
10101001
01000100
01000100
✅ Test( B=11111111 ) is passed.
✅ Test( C=11111111 ) is passed.
✅ Test( H=10101110 ) is passed.
✅ Test( L=01010011 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=1 ) is passed.
✅ Test( FlagN=1 ) is passed.
✅ Test( FlagH=1 ) is passed.
// CPD
11101101
10101001
00110011
00110011
✅ Test( B=11111111 ) is passed.
✅ Test( C=11111110 ) is passed.
✅ Test( H=10101110 ) is passed.
✅ Test( L=01010010 ) is passed.
✅ Test( FlagZ=1 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagN=1 ) is passed.
✅ Test( FlagH=0 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000011011    DEC:27
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00110011    DEC:51
regF    :    BIN 0100011x
regB    :    BIN 11111111    DEC:255
regC    :    BIN 11111110    DEC:254
regD    :    BIN xxxxxxxx
regE    :    BIN xxxxxxxx
regH    :    BIN 10101110    DEC:174
regL    :    BIN 01010010    DEC:82
regPC   :    BIN 0000000000011011    DEC:27
regSP   :    BIN xxxxxxxxxxxxxxxx
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00001111    DEC:15
regDt   :    BIN 00110011    DEC:51
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 00110011    DEC:51
regOP   :    BIN 10101001    DEC:169
regOPo  :    BIN 11101101    DEC:237
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000110011    DEC:51

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
(1010111001010011) 00110011
(1010111001010100) 01000100
----------------------------------------


416000.00ns INFO     cocotb.regression                  tb_instruction passed
416000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      416000.00           0.08    4966272.94  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                416000.00           0.08    4912967.18  **
                                                        *****************************************************************************************
                                                        
