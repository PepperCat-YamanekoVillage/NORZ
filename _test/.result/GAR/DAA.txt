rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1728736145
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00111110', 0, '// LD A,0x99')
('10011001', 0, 0)
('11000110', 0, '// ADD A,0x11')
('00010001', 0, 0)
('00100111', 'A=00010000,FlagC=1,FlagZ=0,FlagPV=0,FlagS=0,FlagH=1', '// DAA')
('00111110', 0, '// LD A,0x70')
('01110000', 0, 0)
('11010110', 0, '// SUB A,0x94')
('10010100', 0, 0)
('00100111', 'A=01110110,FlagC=1,FlagZ=0,FlagPV=0,FlagS=0,FlagH=0', '// DAA')
('00111110', 0, '// LD A,0x0')
('00000000', 0, 0)
('11000110', 0, '// ADD A,0x0')
('00000000', 0, 0)
('00100111', 'A=00000000,FlagC=0,FlagZ=1,FlagPV=1,FlagS=0,FlagH=0', '// DAA')
('00111110', 0, '// LD A,0x99')
('10011001', 0, 0)
('11000110', 0, '// ADD A,0x0')
('00000000', 0, 0)
('00100111', 'A=10011001,FlagC=0,FlagZ=0,FlagPV=1,FlagS=1,FlagH=0', '// DAA')
('00111110', 0, '// LD A,0xff')
('11111111', 0, 0)
('11000110', 0, '// ADD A,0x0')
('00000000', 0, 0)
('00100111', 'A=01100101,FlagC=1,FlagZ=0,FlagPV=1,FlagS=0,FlagH=1', '// DAA')
('00000000', 0, '// 文字コード変換 小文字(https:\\/\\/piclabo.blog.ss-blog.jp/DaaHexTranslate) ')
('00000000', 0, '// b')
('00111110', 0, '// LD A,0xb')
('00001011', 0, 0)
('11010110', 0, '// SUB A,0xa')
('00001010', 0, 0)
('00100111', 0, '// DAA')
('00100111', 0, '// DAA')
('00100111', 0, '// DAA')
('11011110', 0, '// SBC 0x9f')
('10011111', 'A=01100010', 0)
('00000000', 0, '// 3')
('00111110', 0, '// LD A,0x3')
('00000011', 0, 0)
('11010110', 0, '// SUB A,0xa')
('00001010', 0, 0)
('00100111', 0, '// DAA')
('00100111', 0, '// DAA')
('00100111', 0, '// DAA')
('11011110', 0, '// SBC 0x9f')
('10011111', 'A=00110011', 0)
('00000000', 0, '// 文字コード変換 大文字(http:\\/\\/act-ele.c.ooco.jp/blogroot/igarage/article/448.html) ')
('00000000', 0, '// B')
('00111110', 0, '// LD A,0xb')
('00001011', 0, 0)
('11000110', 0, '// ADD A,0x90')
('10010000', 0, 0)
('00100111', 0, '// DAA')
('11001110', 0, '// ADC A,0x40')
('01000000', 0, 0)
('00100111', 'A=01000010', '// DAA ')
('00000000', 0, '// 3')
('00111110', 0, '// LD A,0x3')
('00000011', 0, 0)
('11000110', 0, '// ADD A,0x90')
('10010000', 0, 0)
('00100111', 0, '// DAA')
('11001110', 0, '// ADC A,0x40')
('01000000', 0, 0)
('00100111', 'A=00110011', '// DAA ')
('ffffffff', 0, 0)
----------------------------------------

// LD A,0x99
00111110
10011001
10011001
// ADD A,0x11
11000110
00010001
00010001
// DAA
00100111
✅ Test( A=00010000 ) is passed.
✅ Test( FlagC=1 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=0 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagH=1 ) is passed.
// LD A,0x70
00111110
01110000
01110000
// SUB A,0x94
11010110
10010100
10010100
// DAA
00100111
✅ Test( A=01110110 ) is passed.
✅ Test( FlagC=1 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=0 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD A,0x0
00111110
00000000
00000000
// ADD A,0x0
11000110
00000000
00000000
// DAA
00100111
✅ Test( A=00000000 ) is passed.
✅ Test( FlagC=0 ) is passed.
✅ Test( FlagZ=1 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD A,0x99
00111110
10011001
10011001
// ADD A,0x0
11000110
00000000
00000000
// DAA
00100111
✅ Test( A=10011001 ) is passed.
✅ Test( FlagC=0 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=1 ) is passed.
✅ Test( FlagH=0 ) is passed.
// LD A,0xff
00111110
11111111
11111111
// ADD A,0x0
11000110
00000000
00000000
// DAA
00100111
✅ Test( A=01100101 ) is passed.
✅ Test( FlagC=1 ) is passed.
✅ Test( FlagZ=0 ) is passed.
✅ Test( FlagPV=1 ) is passed.
✅ Test( FlagS=0 ) is passed.
✅ Test( FlagH=1 ) is passed.
// 文字コード変換 小文字(https:\/\/piclabo.blog.ss-blog.jp/DaaHexTranslate) 
00000000
// b
00000000
// LD A,0xb
00111110
00001011
00001011
// SUB A,0xa
11010110
00001010
00001010
// DAA
00100111
// DAA
00100111
// DAA
00100111
// SBC 0x9f
11011110
10011111
10011111
✅ Test( A=01100010 ) is passed.
// 3
00000000
// LD A,0x3
00111110
00000011
00000011
// SUB A,0xa
11010110
00001010
00001010
// DAA
00100111
// DAA
00100111
// DAA
00100111
// SBC 0x9f
11011110
10011111
10011111
✅ Test( A=00110011 ) is passed.
// 文字コード変換 大文字(http:\/\/act-ele.c.ooco.jp/blogroot/igarage/article/448.html) 
00000000
// B
00000000
// LD A,0xb
00111110
00001011
00001011
// ADD A,0x90
11000110
10010000
10010000
// DAA
00100111
// ADC A,0x40
11001110
01000000
01000000
// DAA 
00100111
✅ Test( A=01000010 ) is passed.
// 3
00000000
// LD A,0x3
00111110
00000011
00000011
// ADD A,0x90
11000110
10010000
10010000
// DAA
00100111
// ADC A,0x40
11001110
01000000
01000000
// DAA 
00100111
✅ Test( A=00110011 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000001000001    DEC:65
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00110011    DEC:51
regF    :    BIN 00100101    DEC:37
regB    :    BIN xxxxxxxx
regC    :    BIN xxxxxxxx
regD    :    BIN xxxxxxxx
regE    :    BIN xxxxxxxx
regH    :    BIN xxxxxxxx
regL    :    BIN xxxxxxxx
regPC   :    BIN 0000000001000001    DEC:65
regSP   :    BIN xxxxxxxxxxxxxxxx
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00101011    DEC:43
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 01000000    DEC:64
regOP   :    BIN 00100111    DEC:39
regOPo  :    BIN 11001110    DEC:206
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000100111    DEC:39

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
----------------------------------------


728000.00ns INFO     cocotb.regression                  tb_instruction passed
728000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      728000.00           0.17    4162615.52  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                728000.00           0.18    4138620.23  **
                                                        *****************************************************************************************
                                                        
