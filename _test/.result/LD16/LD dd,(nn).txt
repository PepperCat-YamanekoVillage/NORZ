rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1728634772
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00111110', 0, '// LD A,0xf0')
('11110000', 0, 0)
('00110010', 0, '// LD (0xff00),A')
('00000000', 0, 0)
('11111111', 0, 0)
('00111110', 0, '// LD A,0x33')
('00110011', 0, 0)
('00110010', 0, '// LD (0xff01),A')
('00000001', 0, 0)
('11111111', 0, 0)
('11101101', 0, '// LD BC,(0xff00)')
('01001011', 0, 0)
('00000000', 0, 0)
('11111111', 'B=00110011,C=11110000', 0)
('11101101', 0, '// LD DE,(0xff00)')
('01011011', 0, 0)
('00000000', 0, 0)
('11111111', 'D=00110011,E=11110000', 0)
('11101101', 0, '// LD HL,(0xff00)')
('01101011', 0, 0)
('00000000', 0, 0)
('11111111', 'H=00110011,L=11110000', 0)
('11101101', 0, '// LD SP,(0xff00)')
('01111011', 0, 0)
('00000000', 0, 0)
('11111111', 'SP=0011001111110000', 0)
('ffffffff', 0, 0)
----------------------------------------

// LD A,0xf0
00111110
11110000
11110000
// LD (0xff00),A
00110010
00000000
00000000
11111111
11111111

// LD A,0x33
00111110
00110011
00110011
// LD (0xff01),A
00110010
00000001
00000001
11111111
11111111

// LD BC,(0xff00)
11101101
01001011
00000000
00000000
11111111
11111111
11110000
11110000
00110011
00110011
✅ Test( B=00110011 ) is passed.
✅ Test( C=11110000 ) is passed.
// LD DE,(0xff00)
11101101
01011011
00000000
00000000
11111111
11111111
11110000
11110000
00110011
00110011
✅ Test( D=00110011 ) is passed.
✅ Test( E=11110000 ) is passed.
// LD HL,(0xff00)
11101101
01101011
00000000
00000000
11111111
11111111
11110000
11110000
00110011
00110011
✅ Test( H=00110011 ) is passed.
✅ Test( L=11110000 ) is passed.
// LD SP,(0xff00)
11101101
01111011
00000000
00000000
11111111
11111111
11110000
11110000
00110011
00110011
✅ Test( SP=0011001111110000 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000011010    DEC:26
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00110011    DEC:51
regF    :    BIN xxxxxxxx
regB    :    BIN 00110011    DEC:51
regC    :    BIN 11110000    DEC:240
regD    :    BIN 00110011    DEC:51
regE    :    BIN 11110000    DEC:240
regH    :    BIN 00110011    DEC:51
regL    :    BIN 11110000    DEC:240
regPC   :    BIN 0000000000011010    DEC:26
regSP   :    BIN 0011001111110000    DEC:13296
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00001100    DEC:12
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 00110011    DEC:51
regOP   :    BIN 11111111    DEC:255
regOPo  :    BIN 00000000    DEC:0
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000110011    DEC:51

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
(1111111100000000) 11110000
(1111111100000001) 00110011
----------------------------------------


374000.00ns INFO     cocotb.regression                  tb_instruction passed
374000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      374000.00           0.06    5909874.09  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                374000.00           0.06    5827001.90  **
                                                        *****************************************************************************************
                                                        
