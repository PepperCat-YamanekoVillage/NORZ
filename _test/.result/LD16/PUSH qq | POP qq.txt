rm -f results.xml
"/Applications/Xcode.app/Contents/Developer/usr/bin/make" -f Makefile results.xml
rm -f results.xml
MODULE=instruction_test TESTCASE= TOPLEVEL=NORZ TOPLEVEL_LANG=verilog \
         /opt/homebrew/bin/vvp -M /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb/libs -m libcocotbvpi_icarus   sim_build/sim.vvp  
     -.--ns INFO     gpi                                ..mbed/gpi_embed.cpp:109  in set_program_name_in_venv        Using Python virtual environment interpreter at /Users/Pepper/verilog/norz_verilog/_test/.venv/bin/python
     -.--ns INFO     gpi                                ../gpi/GpiCommon.cpp:101  in gpi_print_registered_impl       VPI registered
     0.00ns INFO     cocotb                             Running on Icarus Verilog version 12.0 (stable)
     0.00ns INFO     cocotb                             Running tests with cocotb v1.9.1 from /Users/Pepper/verilog/norz_verilog/_test/.venv/lib/python3.12/site-packages/cocotb
     0.00ns INFO     cocotb                             Seeding Python random module with 1728646965
     0.00ns INFO     cocotb.regression                  pytest not found, install it to enable better AssertionError messages
     0.00ns INFO     cocotb.regression                  Found test instruction_test.tb_instruction
     0.00ns INFO     cocotb.regression                  running tb_instruction (1/1)


----------------------------------------
BINARY CODES

('00110001', 0, '// LD SP,0xabcd')
('11001101', 0, 0)
('10101011', 0, 0)
('00000001', 0, '// LD BC,0xff00')
('00000000', 0, 0)
('11111111', 0, 0)
('00010001', 0, '// LD DE,0x00ff')
('11111111', 0, 0)
('00000000', 0, 0)
('00100001', 0, '// LD HL,0x3344')
('01000100', 0, 0)
('00110011', 0, 0)
('11000101', '(1010101111001100)=11111111,(1010101111001011)=00000000,SP=1010101111001011', '// PUSH BC')
('11010101', '(1010101111001010)=00000000,(1010101111001001)=11111111,SP=1010101111001001', '// PUSH DE')
('11100101', '(1010101111001000)=00110011,(1010101111000111)=01000100,SP=1010101111000111', '// PUSH HL')
('11000001', 'B=00110011,C=01000100,SP=1010101111001001', '// POP BC')
('11110001', 'A=00000000,F=11111111,SP=1010101111001011', '// POP AF')
('11010001', 'D=11111111,E=00000000,SP=1010101111001101', '// POP DE')
('11110101', '(1010101111001100)=00000000,(1010101111001011)=11111111,SP=1010101111001011', '// PUSH AF')
('11100001', 'H=00000000,L=11111111,SP=1010101111001101', '// POP HL')
('ffffffff', 0, 0)
----------------------------------------

// LD SP,0xabcd
00110001
11001101
11001101
10101011
10101011
// LD BC,0xff00
00000001
00000000
00000000
11111111
11111111
// LD DE,0x00ff
00010001
11111111
11111111
00000000
00000000
// LD HL,0x3344
00100001
01000100
01000100
00110011
00110011
// PUSH BC
11000101


✅ Test( (1010101111001100)=11111111 ) is passed.
✅ Test( (1010101111001011)=00000000 ) is passed.
✅ Test( SP=1010101111001011 ) is passed.
// PUSH DE
11010101


✅ Test( (1010101111001010)=00000000 ) is passed.
✅ Test( (1010101111001001)=11111111 ) is passed.
✅ Test( SP=1010101111001001 ) is passed.
// PUSH HL
11100101


✅ Test( (1010101111001000)=00110011 ) is passed.
✅ Test( (1010101111000111)=01000100 ) is passed.
✅ Test( SP=1010101111000111 ) is passed.
// POP BC
11000001
01000100
01000100
00110011
00110011
✅ Test( B=00110011 ) is passed.
✅ Test( C=01000100 ) is passed.
✅ Test( SP=1010101111001001 ) is passed.
// POP AF
11110001
11111111
11111111
00000000
00000000
✅ Test( A=00000000 ) is passed.
✅ Test( F=11111111 ) is passed.
✅ Test( SP=1010101111001011 ) is passed.
// POP DE
11010001
00000000
00000000
11111111
11111111
✅ Test( D=11111111 ) is passed.
✅ Test( E=00000000 ) is passed.
✅ Test( SP=1010101111001101 ) is passed.
// PUSH AF
11110101


✅ Test( (1010101111001100)=00000000 ) is passed.
✅ Test( (1010101111001011)=11111111 ) is passed.
✅ Test( SP=1010101111001011 ) is passed.
// POP HL
11100001
11111111
11111111
00000000
00000000
✅ Test( H=00000000 ) is passed.
✅ Test( L=11111111 ) is passed.
✅ Test( SP=1010101111001101 ) is passed.
ffffffff

END


----------------------------------------
intAd  :    BIN 0000000000010100    DEC:20
intDt  :    BIN zzzzzzzz
intBSK :    BIN 1    DEC:1
intMRQ :    BIN 0    DEC:0
intRD  :    BIN 0    DEC:0
intWR  :    BIN 1    DEC:1
intRFH :    BIN 1    DEC:1
intIOQ :    BIN 1    DEC:1
intM1  :    BIN 0    DEC:0
intHLT :    BIN 1    DEC:1

regA    :    BIN 00000000    DEC:0
regF    :    BIN 11111111    DEC:255
regB    :    BIN 00110011    DEC:51
regC    :    BIN 01000100    DEC:68
regD    :    BIN 11111111    DEC:255
regE    :    BIN 00000000    DEC:0
regH    :    BIN 00000000    DEC:0
regL    :    BIN 11111111    DEC:255
regPC   :    BIN 0000000000010100    DEC:20
regSP   :    BIN 1010101111001101    DEC:43981
regIX   :    BIN xxxxxxxxxxxxxxxx
regIY   :    BIN xxxxxxxxxxxxxxxx
regI    :    BIN 00000000    DEC:0
regR    :    BIN 00001100    DEC:12
regDt   :    BIN xxxxxxxx
regDex  :    BIN xxxxxxxx
regDcs  :    BIN 00000000    DEC:0
regOP   :    BIN 11100001    DEC:225
regOPo  :    BIN 11110101    DEC:245
regXPT  :    BIN 00001    DEC:1
regITB  :    BIN 00000000    DEC:0
ALU     :    BIN 0000000000000000    DEC:0

IFF1    :    BIN 0    DEC:0
IFF2    :    BIN 0    DEC:0
IMFa    :    BIN 0    DEC:0
IMFb    :    BIN 0    DEC:0
TINT    :    BIN 1    DEC:1
TNMI    :    BIN 1    DEC:1
TWAIT   :    BIN 1    DEC:1
TRESET  :    BIN 1    DEC:1
XIX     :    BIN 0    DEC:0
XIX40   :    BIN 0    DEC:0
XIX41   :    BIN 0    DEC:0
XIY     :    BIN 0    DEC:0
XIY40   :    BIN 0    DEC:0
XIY41   :    BIN 0    DEC:0
XOTR    :    BIN 0    DEC:0
XBIT    :    BIN 0    DEC:0
CM1     :    BIN 1    DEC:1
CMR     :    BIN 0    DEC:0
CMA     :    BIN 0    DEC:0
CBSRQ   :    BIN 0    DEC:0
CRST    :    BIN 0    DEC:0
CNMI    :    BIN 0    DEC:0
CINT0   :    BIN 0    DEC:0
CINT0R  :    BIN 0    DEC:0
CINT0C  :    BIN 0    DEC:0
CINT1   :    BIN 0    DEC:0
CINT2   :    BIN 0    DEC:0
----------------------------------------

VMEM
(1010101111001100) 00000000
(1010101111001011) 11111111
(1010101111001010) 00000000
(1010101111001001) 11111111
(1010101111001000) 00110011
(1010101111000111) 01000100
----------------------------------------


386000.00ns INFO     cocotb.regression                  tb_instruction passed
386000.00ns INFO     cocotb.regression                  *****************************************************************************************
                                                        ** TEST                             STATUS  SIM TIME (ns)  REAL TIME (s)  RATIO (ns/s) **
                                                        *****************************************************************************************
                                                        ** instruction_test.tb_instruction   PASS      386000.00           0.06    7017412.83  **
                                                        *****************************************************************************************
                                                        ** TESTS=1 PASS=1 FAIL=0 SKIP=0                386000.00           0.06    6905941.70  **
                                                        *****************************************************************************************
                                                        
